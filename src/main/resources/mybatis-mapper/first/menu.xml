<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shinvest.ap.app.menu.mapper.MenuMapper">

    <sql id="paging">
        LIMIT #{perPageNum} OFFSET (#{page} - 1) * #{perPageNum}
    </sql>

    <select id="selectList" resultType="com.shinvest.ap.app.menu.model.MenuModel">
WITH RECURSIVE R AS (
    SELECT
        M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT
      , 0 AS LV
      , ARRAY[M.MENU_ID::TEXT] AS FULL_PATH_ID
      , ARRAY[M.MENU_NM::TEXT] AS FULL_PATH_NM
      , ARRAY[LPAD(M.ORD_SEQ::TEXT,5,'0')] AS FULL_ORD_SEQ
    FROM T_USER_SYS_MENU M
    WHERE NULLIF(M.UP_MENU_ID,'') IS NULL AND M.USE_YN = 'Y'
    UNION ALL
    SELECT
        M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT
      , R.LV + 1 AS LV
      , ARRAY_APPEND(R.FULL_PATH_ID,M.MENU_ID::TEXT) AS FULL_PATH_ID
      , ARRAY_APPEND(R.FULL_PATH_NM,M.MENU_NM::TEXT) AS FULL_PATH_NM
      , ARRAY_APPEND(R.FULL_ORD_SEQ,LPAD(M.ORD_SEQ::TEXT,5,'0')) AS FULL_ORD_SEQ
    FROM R
    JOIN T_USER_SYS_MENU M ON R.MENU_ID = M.UP_MENU_ID AND M.USE_YN = 'Y'
) SELECT
    MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT
  , LV
  , ARRAY_TO_JSON(FULL_PATH_ID) AS FULL_PATH_ID
  , ARRAY_TO_JSON(FULL_PATH_NM) AS FULL_PATH_NM
  , ARRAY_TO_STRING(FULL_ORD_SEQ,'-') AS FULL_ORD_SEQ
FROM R
ORDER BY FULL_ORD_SEQ, MENU_NM
    </select>

    <select id="select" resultType="com.shinvest.ap.app.menu.model.MenuModel" parameterType="com.shinvest.ap.app.menu.model.MenuModel">
WITH RECURSIVE R AS (
    SELECT
        M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT
      , 0 AS LV
      , ARRAY[M.MENU_ID::TEXT] AS FULL_PATH_ID
      , ARRAY[M.MENU_NM::TEXT] AS FULL_PATH_NM
      , ARRAY[LPAD(M.ORD_SEQ::TEXT,5,'0')] AS FULL_ORD_SEQ
    FROM T_USER_SYS_MENU M
    WHERE NULLIF(M.UP_MENU_ID,'') IS NULL AND M.USE_YN = 'Y'
    UNION ALL
    SELECT
        M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT
      , R.LV + 1 AS LV
      , ARRAY_APPEND(R.FULL_PATH_ID,M.MENU_ID::TEXT) AS FULL_PATH_ID
      , ARRAY_APPEND(R.FULL_PATH_NM,M.MENU_NM::TEXT) AS FULL_PATH_NM
      , ARRAY_APPEND(R.FULL_ORD_SEQ,LPAD(M.ORD_SEQ::TEXT,5,'0')) AS FULL_ORD_SEQ
    FROM R
    JOIN T_USER_SYS_MENU M ON R.MENU_ID = M.UP_MENU_ID AND M.USE_YN = 'Y'
) SELECT
    MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT
  , LV
  , ARRAY_TO_JSON(FULL_PATH_ID) AS FULL_PATH_ID
  , ARRAY_TO_JSON(FULL_PATH_NM) AS FULL_PATH_NM
  , ARRAY_TO_STRING(FULL_ORD_SEQ,'-') AS FULL_ORD_SEQ
FROM R
WHERE MENU_ID = #{menuId}
    </select>

    <insert id="insert" parameterType="com.shinvest.ap.app.menu.model.MenuModel">
INSERT INTO T_USER_SYS_MENU (
    MENU_ID
  , UP_MENU_ID
  , MENU_NM
  , MENU_URL
  , MENU_DSC
  , ORD_SEQ
  , USE_YN
  , RGST_ID
  , MODI_ID
  , MENU_SE
  , MENU_ATTR
) VALUES (
    #{menuId}
  , #{upMenuId}
  , #{menuNm}
  , #{menuUrl}
  , #{menuDsc}
  , #{ordSeq}
  , 'Y'
  , #{rgstId}
  , #{modiId}
  , #{menuSe}
  , #{menuAttr}
)
    </insert>

    <update id="update" parameterType="com.shinvest.ap.app.menu.model.MenuModel">
UPDATE T_USER_SYS_MENU SET
    up_menu_id = #{upMenuId}
  , menu_nm = #{menuNm}
  , menu_url = #{menuUrl}
  , menu_dsc = #{menuDsc}
  , ord_seq = #{ordSeq}
  , use_yn = #{useYn}
  , modi_id = #{modiId}
  , modi_dt = NOW()
  , menu_se = #{menuSe}
  , menu_attr = #{menuAttr}
WHERE MENU_ID = #{menuId}
    </update>

    <delete id="delete" parameterType="com.shinvest.ap.app.menu.model.MenuModel">
UPDATE T_MGR_SYS_MENU SET
    use_yn = 'N'
  , modi_id = #{modiId}
  , modi_dt = NOW()
WHERE MENU_ID = #{menuId}
    </delete>

    <select id="selectUpperMenuIdForMenuUrl" resultType="string" parameterType="com.shinvest.ap.app.menu.model.MenuModel">
<![CDATA[
WITH RECURSIVE R AS (
    SELECT
        M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT
      , 0 AS LV
      , ARRAY[M.MENU_ID::TEXT] AS FULL_PATH_ID
      , ARRAY[M.MENU_NM::TEXT] AS FULL_PATH_NM
      , ARRAY[LPAD(M.ORD_SEQ::TEXT,5,'0')] AS FULL_ORD_SEQ
    FROM T_MGR_SYS_MENU M
    WHERE NULLIF(M.UP_MENU_ID,'') IS NULL AND M.MENU_SE = 'M' AND M.USE_YN = 'Y'
    UNION ALL
    SELECT
        M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT
      , R.LV + 1 AS LV
      , ARRAY_APPEND(R.FULL_PATH_ID,M.MENU_ID::TEXT) AS FULL_PATH_ID
      , ARRAY_APPEND(R.FULL_PATH_NM,M.MENU_NM::TEXT) AS FULL_PATH_NM
      , ARRAY_APPEND(R.FULL_ORD_SEQ,LPAD(M.ORD_SEQ::TEXT,5,'0')) AS FULL_ORD_SEQ
    FROM R
    JOIN T_MGR_SYS_MENU M ON R.MENU_ID = M.UP_MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y'
) SELECT
    UP_MENU_ID
FROM R
WHERE LV > 0 AND MENU_URL = #{menuUrl}
ORDER BY FULL_ORD_SEQ DESC, MENU_NM
LIMIT 1
]]>
    </select>
    
    <select id="selectTopMenuListWithAuth" resultType="com.shinvest.ap.app.menu.model.MenuModel" parameterType="string">
WITH RECURSIVE R AS (
    SELECT
        M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT
      , 0 AS LV
      , ARRAY[M.MENU_ID::TEXT] AS FULL_PATH_ID
      , ARRAY[M.MENU_NM::TEXT] AS FULL_PATH_NM
      , ARRAY[LPAD(M.ORD_SEQ::TEXT,5,'0')] AS FULL_ORD_SEQ
    FROM T_MGR_SYS_MENU M
    JOIN T_MGR_SYS_MENU_AUTH A ON M.MENU_ID = A.MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = #{authId}
    WHERE NULLIF(M.UP_MENU_ID,'') IS NULL
    UNION ALL
    SELECT
        M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT
      , R.LV + 1 AS LV
      , ARRAY_APPEND(R.FULL_PATH_ID,M.MENU_ID::TEXT) AS FULL_PATH_ID
      , ARRAY_APPEND(R.FULL_PATH_NM,M.MENU_NM::TEXT) AS FULL_PATH_NM
      , ARRAY_APPEND(R.FULL_ORD_SEQ,LPAD(M.ORD_SEQ::TEXT,5,'0')) AS FULL_ORD_SEQ
    FROM R
    JOIN T_MGR_SYS_MENU M ON R.MENU_ID = M.UP_MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y'
    JOIN T_MGR_SYS_MENU_AUTH A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = #{authId}
) SELECT
    MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT
  , LV
  , ARRAY_TO_JSON(FULL_PATH_ID) AS FULL_PATH_ID
  , ARRAY_TO_JSON(FULL_PATH_NM) AS FULL_PATH_NM
  , ARRAY_TO_STRING(FULL_ORD_SEQ,'-') AS FULL_ORD_SEQ
FROM R
WHERE LV = 1
ORDER BY FULL_ORD_SEQ, MENU_NM
    </select>
    
    <select id="selectLeftMenuListWithAuth" resultType="com.shinvest.ap.app.menu.model.MenuModel" parameterType="map">
WITH RECURSIVE R AS (
    SELECT
        M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT
      , 0 AS LV
      , ARRAY[M.MENU_ID::TEXT] AS FULL_PATH_ID
      , ARRAY[M.MENU_NM::TEXT] AS FULL_PATH_NM
      , ARRAY[LPAD(M.ORD_SEQ::TEXT,5,'0')] AS FULL_ORD_SEQ
    FROM T_MGR_SYS_MENU M
    JOIN T_MGR_SYS_MENU_AUTH A ON M.MENU_ID = A.MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = #{authId}
    WHERE NULLIF(M.UP_MENU_ID,'') IS NULL
    UNION ALL
    SELECT
        M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT
      , R.LV + 1 AS LV
      , ARRAY_APPEND(R.FULL_PATH_ID,M.MENU_ID::TEXT) AS FULL_PATH_ID
      , ARRAY_APPEND(R.FULL_PATH_NM,M.MENU_NM::TEXT) AS FULL_PATH_NM
      , ARRAY_APPEND(R.FULL_ORD_SEQ,LPAD(M.ORD_SEQ::TEXT,5,'0')) AS FULL_ORD_SEQ
    FROM R
    JOIN T_MGR_SYS_MENU M ON R.MENU_ID = M.UP_MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y'
    JOIN T_MGR_SYS_MENU_AUTH A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = #{authId}
) SELECT
    MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT
  , LV
  , ARRAY_TO_JSON(FULL_PATH_ID) AS FULL_PATH_ID
  , ARRAY_TO_JSON(FULL_PATH_NM) AS FULL_PATH_NM
  , ARRAY_TO_STRING(FULL_ORD_SEQ,'-') AS FULL_ORD_SEQ
FROM R
WHERE UP_MENU_ID = #{upMenuId}
ORDER BY FULL_ORD_SEQ, MENU_NM
    </select>

	<select id="selectFirstMenuUrl" resultType="string" parameterType="map">
WITH RECURSIVE R AS (
    SELECT
        M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT
      , 0 AS LV
      , ARRAY[M.MENU_ID::TEXT] AS FULL_PATH_ID
      , ARRAY[M.MENU_NM::TEXT] AS FULL_PATH_NM
      , ARRAY[LPAD(M.ORD_SEQ::TEXT,5,'0')] AS FULL_ORD_SEQ
    FROM T_MGR_SYS_MENU M
    JOIN T_MGR_SYS_MENU_AUTH A ON M.MENU_ID = A.MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = #{authId}
    WHERE NULLIF(M.UP_MENU_ID,'') IS NULL
    UNION ALL
    SELECT
        M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT
      , R.LV + 1 AS LV
      , ARRAY_APPEND(R.FULL_PATH_ID,M.MENU_ID::TEXT) AS FULL_PATH_ID
      , ARRAY_APPEND(R.FULL_PATH_NM,M.MENU_NM::TEXT) AS FULL_PATH_NM
      , ARRAY_APPEND(R.FULL_ORD_SEQ,LPAD(M.ORD_SEQ::TEXT,5,'0')) AS FULL_ORD_SEQ
    FROM R
    JOIN T_MGR_SYS_MENU M ON R.MENU_ID = M.UP_MENU_ID AND M.MENU_SE = 'M' AND M.USE_YN = 'Y'
    JOIN T_MGR_SYS_MENU_AUTH A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = #{authId}
) SELECT
    MENU_URL
FROM R
<![CDATA[
WHERE LV > 1
]]>
		<if test='@org.apache.commons.lang3.StringUtils@isNotBlank(menuUrl)'>
  AND MENU_URL LIKE #{menuUrl}||'%'
		</if>
ORDER BY FULL_ORD_SEQ, MENU_NM
LIMIT 1
	</select>
    
    <select id="selectMenuAuthList" resultType="com.shinvest.ap.app.menu.model.MenuModel">
    	SELECT
			A.MENU_ID
			, COUNT(*)
			, B.MENU_NM
			, B.MENU_URL
			, B.ORD_SEQ
			, B.UP_MENU_ID
		FROM
			T_USER_SYS_MENU_AUTH A
		LEFT OUTER JOIN T_USER_SYS_MENU B 
		ON
			A.MENU_ID = B.MENU_ID
		GROUP BY
			A.MENU_ID,
			B.MENU_ID
    
    </select>
    
    <select id="selectMenuListWithAuth" resultType="com.shinvest.ap.app.menu.model.MenuModel" parameterType="string">
WITH RECURSIVE R AS (
    SELECT
        M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, A.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT
      , 0 AS LV
      , ARRAY[M.MENU_ID::TEXT] AS FULL_PATH_ID
      , ARRAY[M.MENU_NM::TEXT] AS FULL_PATH_NM
      , ARRAY[LPAD(M.ORD_SEQ::TEXT,5,'0')] AS FULL_ORD_SEQ
    FROM T_USER_SYS_MENU M
    JOIN T_USER_SYS_MENU_AUTH A ON M.MENU_ID = A.MENU_ID AND A.AUTH_ID = #{authId}
    WHERE NULLIF(M.UP_MENU_ID,'') IS NULL
    UNION ALL
    SELECT
        M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, M.MENU_ATTR, A.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT
      , R.LV + 1 AS LV
      , ARRAY_APPEND(R.FULL_PATH_ID,M.MENU_ID::TEXT) AS FULL_PATH_ID
      , ARRAY_APPEND(R.FULL_PATH_NM,M.MENU_NM::TEXT) AS FULL_PATH_NM
      , ARRAY_APPEND(R.FULL_ORD_SEQ,LPAD(M.ORD_SEQ::TEXT,5,'0')) AS FULL_ORD_SEQ
    FROM R
    JOIN T_USER_SYS_MENU M ON R.MENU_ID = M.UP_MENU_ID
    JOIN T_USER_SYS_MENU_AUTH A ON M.MENU_ID = A.MENU_ID AND A.AUTH_ID = #{authId}
) SELECT
    MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT
  , LV
  , ARRAY_TO_JSON(FULL_PATH_ID) AS FULL_PATH_ID
  , ARRAY_TO_JSON(FULL_PATH_NM) AS FULL_PATH_NM
  , ARRAY_TO_STRING(FULL_ORD_SEQ,'-') AS FULL_ORD_SEQ
FROM R
    </select>
    
    <update id="updateMenuListWithAuth" parameterType="com.shinvest.ap.app.menu.model.MenuModel">
UPDATE T_USER_SYS_MENU_AUTH SET
	use_yn = #{authUseYn}
  , modi_id = #{modiId}
  , modi_dt = NOW()
WHERE AUTH_ID = #{authId}
AND MENU_ID = #{menuId}
    </update>
</mapper>