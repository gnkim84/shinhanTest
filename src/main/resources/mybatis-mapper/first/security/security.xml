<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shinvest.ap.config.security.mapper.SecurityMapper">

    <select id="selectUser" parameterType="string" resultType="memberModel">
<![CDATA[
SELECT
    U.USER_ID
  , U.USER_NM
  , U.PSTN_CODE
  , P.PSTN_NM
  , U.DEPT_CODE
  , D.DEPT_NM
  , U.ADOF_DEPT_CODE
  , AD.DEPT_NM AS ADOF_DEPT_NM
  , U.HDEPT_CODE
  , H.HDEPT_NM
  , U.COMPANY_CODE
  , (SELECT CODE_NM FROM T_CODE WHERE GROUP_ID = 'COMPANY_CODE' AND CODE_ID = U.COMPANY_CODE) AS COMPANY_NM
  , U.DUTY_SE
  , U.USE_YN
  , U.MODI_SE
  , U.LAST_LOG_DT
  , U.START_DT
  , U.END_DT
  , CASE WHEN COALESCE(U.LAST_LOG_DT, NOW()) + (SELECT CODE_NM FROM T_CODE WHERE GROUP_ID = 'ACCOUNT_LOCK_PD' AND CODE_ID = 'LOCK_PD')::INTERVAL < NOW() THEN 'Y' ELSE 'N' END AS LOCK_YN
  , CASE WHEN DATE(NOW()) BETWEEN DATE(COALESCE(U.START_DT,NOW())) AND DATE(COALESCE(U.END_DT,NOW())) THEN 'N' ELSE 'Y' END AS EXPIRED_YN
  , U.MGR_SYS_ENV
  , U.USER_SYS_ENV
  , U.USER_SYS_HOME
  , U.BF_DEPT_CODE
  , U.DEPT_UPDT_DT
  , A.AUTH_ID
  , UA.AUTH_CL
  , COALESCE(A.USE_YN,'N') AS AUTH_USE_YN
  , UA.AUTH_NM
  , COALESCE(A.USE_YN,'N') AS MGR_YN
  , F.FILE_ID
  , F.FILE_URL
  , TU.TABLEAU_USER_ID
FROM PTL.T_USER U
LEFT OUTER JOIN PTL.T_HDEPT H ON U.HDEPT_CODE = H.HDEPT_CODE
LEFT OUTER JOIN PTL.T_DEPT D ON U.DEPT_CODE = D.DEPT_CODE
LEFT OUTER JOIN PTL.T_DEPT AD ON U.ADOF_DEPT_CODE = AD.DEPT_CODE
LEFT OUTER JOIN PTL.T_PSTN P ON U.PSTN_CODE = P.PSTN_CODE
LEFT OUTER JOIN PTL.T_MGR_AUTH A ON U.USER_ID = A.USER_ID
LEFT OUTER JOIN PTL.T_MGR_SYS_AUTH UA ON A.AUTH_ID = UA.AUTH_ID
LEFT OUTER JOIN PTL.T_FILE F ON U.USER_ID = F.REF_ID AND F.USE_YN = 'Y'
LEFT OUTER JOIN PTL.T_TABLEAU_USER TU ON U.USER_ID = TU.USER_ID
WHERE U.USER_ID = #{userId}
]]>
    </select>


	<update id="updateLastLogDt" parameterType="string">
UPDATE T_USER SET LAST_LOG_DT = NOW() WHERE USER_ID = #{userId}
	</update>

	<select id="selectLoginMessage" parameterType="string" resultType="string">
SELECT CODE_DSC FROM T_CODE WHERE GROUP_ID = 'LOGIN_MESSAGE' AND CODE_ID = #{codeId}
	</select>

    <select id="selectMenuWithAuth" resultType="menuModel" parameterType="map">
WITH RECURSIVE R AS (
    SELECT
        M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT
      , 0 AS LV
      , ARRAY[M.MENU_ID::TEXT] AS FULL_PATH_ID
      , ARRAY[M.MENU_NM::TEXT] AS FULL_PATH_NM
      , ARRAY[LPAD(M.ORD_SEQ::TEXT,5,'0')] AS FULL_ORD_SEQ
    FROM T_MGR_SYS_MENU M
    JOIN T_MGR_SYS_MENU_AUTH A ON M.MENU_ID = A.MENU_ID AND M.USE_YN = 'Y' AND A.USE_YN = 'Y' AND A.AUTH_ID = #{authId}
    WHERE NULLIF(M.UP_MENU_ID,'') IS NULL
    UNION ALL
    SELECT
        M.MENU_ID, M.UP_MENU_ID, M.MENU_NM, M.MENU_URL, M.MENU_DSC, M.ORD_SEQ, M.MENU_SE, A.MENU_ATTR, M.USE_YN, M.RGST_ID, M.RGST_DT, M.MODI_ID, M.MODI_DT
      , R.LV + 1 AS LV
      , ARRAY_APPEND(R.FULL_PATH_ID,M.MENU_ID::TEXT) AS FULL_PATH_ID
      , ARRAY_APPEND(R.FULL_PATH_NM,M.MENU_NM::TEXT) AS FULL_PATH_NM
      , ARRAY_APPEND(R.FULL_ORD_SEQ,LPAD(M.ORD_SEQ::TEXT,5,'0')) AS FULL_ORD_SEQ
    FROM R
    JOIN T_MGR_SYS_MENU M ON R.MENU_ID = M.UP_MENU_ID AND M.USE_YN = 'Y'
    JOIN T_MGR_SYS_MENU_AUTH A ON M.MENU_ID = A.MENU_ID AND A.USE_YN = 'Y' AND A.AUTH_ID = #{authId}
) SELECT
    MENU_ID, UP_MENU_ID, MENU_NM, MENU_URL, MENU_DSC, ORD_SEQ, MENU_SE, MENU_ATTR, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT
  , LV
  , ARRAY_TO_JSON(FULL_PATH_ID) AS FULL_PATH_ID
  , ARRAY_TO_JSON(FULL_PATH_NM) AS FULL_PATH_NM
  , ARRAY_TO_STRING(FULL_ORD_SEQ,'-') AS FULL_ORD_SEQ
FROM R
WHERE MENU_URL = #{menuUrl}
ORDER BY FULL_ORD_SEQ, MENU_NM
    </select>

</mapper>