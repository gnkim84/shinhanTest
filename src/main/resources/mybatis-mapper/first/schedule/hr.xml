<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shinvest.ap.schedule.mapper.JobHrMapper">

<!-- 사용자 인터페이스 삭제 -->
	<delete id="deleteIfUser">
DELETE FROM PTL.T_IF_USER
	</delete>

<!-- 본부 인터페이스 삭제 -->
	<delete id="deleteIfHdept">
DELETE FROM PTL.T_IF_HDEPT
	</delete>

<!-- 부서 인터페이스 삭제 -->
	<delete id="deleteIfDept">
DELETE FROM PTL.T_IF_DEPT
	</delete>

<!-- 직위 인터페이스 삭제 -->
	<delete id="deleteIfPstn">
DELETE FROM PTL.T_IF_PSTN
	</delete>



<!-- 사용자 인터페이스 등록 -->
	<insert id="insertIfUser" parameterType="map">
INSERT INTO PTL.T_IF_USER (USER_ID,USER_NM,PSTN_CODE,DEPT_CODE,ADOF_DEPT_CODE,HDEPT_CODE,COMPANY_CODE,DUTY_SE,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT) VALUES
		<foreach collection="EMP" item="i" separator=",">
(#{i.userId},#{i.userNm},#{i.pstnCode},#{i.deptCode},#{i.adofDeptCode},NULL,'GS',#{i.dutySe},'I','SYSTEM',NOW(),'SYSTEM',NOW())
		</foreach>
	</insert>

<!-- 본부 인터페이스 등록 -->
	<insert id="insertIfHdept" parameterType="map">
INSERT INTO PTL.T_IF_HDEPT (HDEPT_CODE,HDEPT_NM,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT) VALUES
		<foreach collection="HDEPT" item="i" separator=",">
(#{i.hdeptCode},#{i.hdeptNm},'I','SYSTEM',NOW(),'SYSTEM',NOW())
		</foreach>
	</insert>

<!-- 부서 인터페이스 등록 -->
	<insert id="insertIfDept" parameterType="map">
INSERT INTO PTL.T_IF_DEPT (DEPT_CODE,DEPT_NM,HDEPT_CODE,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT) VALUES
		<foreach collection="DEPT" item="i" separator=",">
(#{i.deptCode},#{i.deptNm},#{i.hdeptCode},'I','SYSTEM',NOW(),'SYSTEM',NOW())
		</foreach>	
	</insert>

<!-- 직위 인터페이스 등록 -->
	<insert id="insertIfPstn" parameterType="map">
INSERT INTO PTL.T_IF_PSTN (PSTN_CODE,PSTN_NM,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT) VALUES
		<foreach collection="POSITION" item="i" separator=",">
(#{i.pstnCode},#{i.pstnNm},'I','SYSTEM',NOW(),'SYSTEM',NOW())
		</foreach>
	</insert>

<!-- 사용자 인터페이스 본부 코드 등록 : 부서 분류에서 가져옴 -->
	<update id="updateIfUser">
UPDATE PTL.T_IF_USER U SET
    HDEPT_CODE = D.UP_DEPT_CODE
FROM PTL.T_DEPT_CL D
WHERE U.DEPT_CODE = D.DEPT_CODE
	</update>



<!-- 삭제 사용자 이력 -->
	<insert id="syncDeleteUserHist">
INSERT INTO PTL.T_USER_HIST(HIST_DT,USER_ID,USER_NM,PSTN_CODE,PSTN_NM,DEPT_CODE,DEPT_NM,ADOF_DEPT_CODE,ADOF_DEPT_NM,HDEPT_CODE,HDEPT_NM,COMPANY_CODE,COMPANY_NM,DUTY_SE,USE_YN,LAST_LOG_DT,START_DT,END_DT,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT,FILE_URL,MGR_AUTH_ID,MGR_AUTH_CL,MGR_AUTH_NM,USER_AUTH_ID,USER_AUTH_CL,USER_AUTH_NM,MGR_SYS_ENV,USER_SYS_ENV,BF_DEPT_CODE,DEPT_UPDT_DT,USER_SYS_HOME,MGR_AUTH_USE_YN,USER_AUTH_USE_YN)
SELECT NOW(),T.USER_ID,T.USER_NM,T.PSTN_CODE,P.PSTN_NM,T.DEPT_CODE,D.DEPT_NM,T.ADOF_DEPT_CODE,AD.DEPT_NM,T.HDEPT_CODE,H.HDEPT_NM,T.COMPANY_CODE,NULL,T.DUTY_SE,T.USE_YN,T.LAST_LOG_DT,T.START_DT,T.END_DT,T.MODI_SE,T.RGST_ID,T.RGST_DT,T.MODI_ID,T.MODI_DT,T.FILE_URL,MA.AUTH_ID,MSA.AUTH_CL,MSA.AUTH_NM,UA.AUTH_ID,USA.AUTH_CL,USA.AUTH_NM,T.MGR_SYS_ENV,T.USER_SYS_ENV,T.BF_DEPT_CODE,T.DEPT_UPDT_DT,T.USER_SYS_HOME,MA.USE_YN,UA.USE_YN
FROM PTL.T_USER T
LEFT OUTER JOIN PTL.T_HDEPT H ON T.HDEPT_CODE = H.HDEPT_CODE
LEFT OUTER JOIN PTL.T_DEPT D ON T.DEPT_CODE = D.DEPT_CODE
LEFT OUTER JOIN PTL.T_DEPT AD ON T.ADOF_DEPT_CODE = AD.DEPT_CODE
LEFT OUTER JOIN PTL.T_PSTN P ON T.PSTN_CODE = P.PSTN_CODE
LEFT OUTER JOIN PTL.T_MGR_AUTH MA ON T.USER_ID = MA.USER_ID
LEFT OUTER JOIN PTL.T_MGR_SYS_AUTH MSA ON MA.AUTH_ID = MSA.AUTH_ID
LEFT OUTER JOIN PTL.T_USER_AUTH UA ON T.USER_ID = UA.USER_ID
LEFT OUTER JOIN PTL.T_USER_SYS_AUTH USA ON UA.AUTH_ID = USA.AUTH_ID
WHERE T.MODI_SE = 'D'
	</insert>
<!-- 삭제 사용자 -->
	<update id="syncDeleteUser">
UPDATE PTL.T_USER SET
    MODI_SE = 'D',
    USE_YN = 'N',
    MODI_ID = 'SYSTEM',
    MODI_DT = NOW()
WHERE MODI_SE = 'C'
  AND USER_ID NOT IN (SELECT USER_ID FROM PTL.T_IF_USER UNION SELECT USER_ID FROM PTL.T_USER_TEST)
	</update>
<!-- 삭제 사용자 권한 제거 -->
	<update id="syncDeleteAuth">
UPDATE PTL.T_USER_AUTH SET
    USE_YN = 'N',
    MODI_ID = 'SYSTEM',
    MODI_DT = NOW()
WHERE USER_ID IN (SELECT USER_ID FROM PTL.T_USER WHERE MODI_SE = 'D')
	</update>
<!-- 변경 사용자 이력 -->
	<insert id="syncUpdateUserHist">
INSERT INTO PTL.T_USER_HIST(HIST_DT,USER_ID,USER_NM,PSTN_CODE,PSTN_NM,DEPT_CODE,DEPT_NM,ADOF_DEPT_CODE,ADOF_DEPT_NM,HDEPT_CODE,HDEPT_NM,COMPANY_CODE,COMPANY_NM,DUTY_SE,USE_YN,LAST_LOG_DT,START_DT,END_DT,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT,FILE_URL,MGR_AUTH_ID,MGR_AUTH_CL,MGR_AUTH_NM,USER_AUTH_ID,USER_AUTH_CL,USER_AUTH_NM,MGR_SYS_ENV,USER_SYS_ENV,BF_DEPT_CODE,DEPT_UPDT_DT,USER_SYS_HOME,MGR_AUTH_USE_YN,USER_AUTH_USE_YN)
SELECT NOW(),T.USER_ID,T.USER_NM,T.PSTN_CODE,P.PSTN_NM,T.DEPT_CODE,D.DEPT_NM,T.ADOF_DEPT_CODE,AD.DEPT_NM,T.HDEPT_CODE,H.HDEPT_NM,T.COMPANY_CODE,NULL,T.DUTY_SE,T.USE_YN,T.LAST_LOG_DT,T.START_DT,T.END_DT,T.MODI_SE,T.RGST_ID,T.RGST_DT,T.MODI_ID,T.MODI_DT,T.FILE_URL,MA.AUTH_ID,MSA.AUTH_CL,MSA.AUTH_NM,UA.AUTH_ID,USA.AUTH_CL,USA.AUTH_NM,T.MGR_SYS_ENV,T.USER_SYS_ENV,T.BF_DEPT_CODE,T.DEPT_UPDT_DT,T.USER_SYS_HOME,MA.USE_YN,UA.USE_YN
FROM PTL.T_USER T
LEFT OUTER JOIN PTL.T_HDEPT H ON T.HDEPT_CODE = H.HDEPT_CODE
LEFT OUTER JOIN PTL.T_DEPT D ON T.DEPT_CODE = D.DEPT_CODE
LEFT OUTER JOIN PTL.T_DEPT AD ON T.ADOF_DEPT_CODE = AD.DEPT_CODE
LEFT OUTER JOIN PTL.T_PSTN P ON T.PSTN_CODE = P.PSTN_CODE
LEFT OUTER JOIN PTL.T_MGR_AUTH MA ON T.USER_ID = MA.USER_ID
LEFT OUTER JOIN PTL.T_MGR_SYS_AUTH MSA ON MA.AUTH_ID = MSA.AUTH_ID
LEFT OUTER JOIN PTL.T_USER_AUTH UA ON T.USER_ID = UA.USER_ID
LEFT OUTER JOIN PTL.T_USER_SYS_AUTH USA ON UA.AUTH_ID = USA.AUTH_ID
WHERE T.MODI_SE = 'U'
	</insert>
<!-- 부서 변경 초기화 -->
	<update id="updateBfDeptCode">
UPDATE PTL.T_USER SET
    BF_DEPT_CODE = NULL
  , DEPT_UPDT_DT = NULL
  , MODI_SE = 'U'
  , MODI_ID = 'SYSTEM'
  , MODI_DT = NOW()
WHERE DATE(DEPT_UPDT_DT) &lt; DATE(NOW() + '-3 DAYS'::INTERVAL)
	</update>
<!-- 변경 사용자 -->
	<update id="syncUpdateUser">
UPDATE PTL.T_USER T SET
    USER_NM = S.USER_NM,
    PSTN_CODE = S.PSTN_CODE,
    DEPT_CODE = S.DEPT_CODE,
    ADOF_DEPT_CODE = S.ADOF_DEPT_CODE,
    HDEPT_CODE = S.HDEPT_CODE,
    COMPANY_CODE = S.COMPANY_CODE,
    DUTY_SE = S.DUTY_SE,
    MODI_SE = 'U',
    MODI_ID = 'SYSTEM',
    MODI_DT = NOW(),
    BF_DEPT_CODE = CASE WHEN T.DEPT_CODE != S.DEPT_CODE THEN T.DEPT_CODE ELSE T.BF_DEPT_CODE END,
    DEPT_UPDT_DT = CASE WHEN T.DEPT_CODE != S.DEPT_CODE THEN NOW() ELSE T.DEPT_UPDT_DT END
FROM PTL.T_IF_USER S
WHERE T.MODI_SE IN ('C','U')
  AND T.USER_ID = S.USER_ID
  AND (
        T.USER_NM != S.USER_NM
     OR T.PSTN_CODE != S.PSTN_CODE
     OR T.DEPT_CODE != S.DEPT_CODE
     OR T.ADOF_DEPT_CODE != S.ADOF_DEPT_CODE
     OR T.HDEPT_CODE != S.HDEPT_CODE
     OR T.COMPANY_CODE != S.COMPANY_CODE
     OR T.DUTY_SE != S.DUTY_SE
)
	</update>
<!-- 신규 사용자 이력 -->
	<insert id="syncInsertUserHist">
INSERT INTO PTL.T_USER_HIST(HIST_DT,USER_ID,USER_NM,PSTN_CODE,PSTN_NM,DEPT_CODE,DEPT_NM,ADOF_DEPT_CODE,ADOF_DEPT_NM,HDEPT_CODE,HDEPT_NM,COMPANY_CODE,COMPANY_NM,DUTY_SE,USE_YN,LAST_LOG_DT,START_DT,END_DT,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT,FILE_URL,MGR_AUTH_ID,MGR_AUTH_CL,MGR_AUTH_NM,USER_AUTH_ID,USER_AUTH_CL,USER_AUTH_NM,MGR_SYS_ENV,USER_SYS_ENV,BF_DEPT_CODE,DEPT_UPDT_DT,USER_SYS_HOME,MGR_AUTH_USE_YN,USER_AUTH_USE_YN)
SELECT NOW(),T.USER_ID,T.USER_NM,T.PSTN_CODE,P.PSTN_NM,T.DEPT_CODE,D.DEPT_NM,T.ADOF_DEPT_CODE,AD.DEPT_NM,T.HDEPT_CODE,H.HDEPT_NM,T.COMPANY_CODE,NULL,T.DUTY_SE,T.USE_YN,T.LAST_LOG_DT,T.START_DT,T.END_DT,T.MODI_SE,T.RGST_ID,T.RGST_DT,T.MODI_ID,T.MODI_DT,T.FILE_URL,MA.AUTH_ID,MSA.AUTH_CL,MSA.AUTH_NM,UA.AUTH_ID,USA.AUTH_CL,USA.AUTH_NM,T.MGR_SYS_ENV,T.USER_SYS_ENV,T.BF_DEPT_CODE,T.DEPT_UPDT_DT,T.USER_SYS_HOME,MA.USE_YN,UA.USE_YN
FROM PTL.T_USER T
LEFT OUTER JOIN PTL.T_HDEPT H ON T.HDEPT_CODE = H.HDEPT_CODE
LEFT OUTER JOIN PTL.T_DEPT D ON T.DEPT_CODE = D.DEPT_CODE
LEFT OUTER JOIN PTL.T_DEPT AD ON T.ADOF_DEPT_CODE = AD.DEPT_CODE
LEFT OUTER JOIN PTL.T_PSTN P ON T.PSTN_CODE = P.PSTN_CODE
LEFT OUTER JOIN PTL.T_MGR_AUTH MA ON T.USER_ID = MA.USER_ID
LEFT OUTER JOIN PTL.T_MGR_SYS_AUTH MSA ON MA.AUTH_ID = MSA.AUTH_ID
LEFT OUTER JOIN PTL.T_USER_AUTH UA ON T.USER_ID = UA.USER_ID
LEFT OUTER JOIN PTL.T_USER_SYS_AUTH USA ON UA.AUTH_ID = USA.AUTH_ID
WHERE T.MODI_SE = 'I'
	</insert>
<!-- 신규 사용자 -->
	<insert id="syncInsertUser">
INSERT INTO PTL.T_USER (USER_ID,USER_NM,PSTN_CODE,DEPT_CODE,ADOF_DEPT_CODE,HDEPT_CODE,COMPANY_CODE,DUTY_SE,USE_YN,LAST_LOG_DT,START_DT,END_DT,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT)
SELECT
    S.USER_ID,S.USER_NM,S.PSTN_CODE,S.DEPT_CODE,S.ADOF_DEPT_CODE,S.HDEPT_CODE,S.COMPANY_CODE,S.DUTY_SE,'Y',NULL,NULL,NULL,'I','SYSTEM',NOW(),'SYSTEM',NOW()
FROM PTL.T_IF_USER S
LEFT OUTER JOIN PTL.T_USER T ON S.USER_ID = T.USER_ID
WHERE T.USER_ID IS NULL
	</insert>
<!-- 신규 사용자 권한 등록 -->
	<insert id="syncInsertAuth">
INSERT INTO PTL.T_USER_AUTH (USER_ID, AUTH_ID, USE_YN, RGST_ID, RGST_DT, MODI_ID, MODI_DT)
SELECT
    USER_ID, 'AU2020_100000001', 'Y', 'SYSTEM', NOW(), 'SYSTEM', NOW()
FROM PTL.T_USER
WHERE MODI_SE = 'I'
	</insert>
<!-- 사용자 수정 구분 정리 -->
	<update id="updateModiSeUser">
UPDATE PTL.T_USER SET MODI_SE = CASE MODI_SE WHEN 'D' THEN 'R' ELSE 'C' END WHERE MODI_SE IN ('I','U','D')
	</update>



<!-- 삭제 본부 이력 -->
	<insert id="syncDeleteHdeptHist">
INSERT INTO PTL.T_HDEPT_HIST(HIST_DT,HDEPT_CODE,HDEPT_NM,USE_YN,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT)
SELECT NOW(),HDEPT_CODE,HDEPT_NM,USE_YN,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT
FROM PTL.T_HDEPT
WHERE MODI_SE = 'D'
	</insert>
<!-- 삭제 본부 -->
	<update id="syncDeleteHdept">
UPDATE PTL.T_HDEPT SET
    MODI_SE = 'D',
    USE_YN = 'N',
    MODI_ID = 'SYSTEM',
    MODI_DT = NOW()
WHERE MODI_SE = 'C'
  AND HDEPT_CODE NOT IN (SELECT HDEPT_CODE FROM PTL.T_IF_HDEPT)
	</update>
<!-- 변경 본부 이력 -->
	<insert id="syncUpdateHdeptHist">
INSERT INTO PTL.T_HDEPT_HIST(HIST_DT,HDEPT_CODE,HDEPT_NM,USE_YN,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT)
SELECT NOW(),HDEPT_CODE,HDEPT_NM,USE_YN,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT
FROM PTL.T_HDEPT
WHERE MODI_SE = 'U'
	</insert>
<!-- 변경 본부 -->
	<update id="syncUpdateHdept">
UPDATE PTL.T_HDEPT T SET
    HDEPT_NM = S.HDEPT_NM,
    MODI_SE = 'U',
    MODI_ID = 'SYSTEM',
    MODI_DT = NOW()
FROM PTL.T_IF_HDEPT S
WHERE T.HDEPT_CODE = S.HDEPT_CODE
  AND T.HDEPT_NM != S.HDEPT_NM
	</update>
<!-- 신규 본부 이력 -->
	<insert id="syncInsertHdeptHist">
INSERT INTO PTL.T_HDEPT_HIST(HIST_DT,HDEPT_CODE,HDEPT_NM,USE_YN,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT)
SELECT NOW(),HDEPT_CODE,HDEPT_NM,USE_YN,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT
FROM PTL.T_HDEPT
WHERE MODI_SE = 'I'
	</insert>
<!-- 신규 본부 -->
	<insert id="syncInsertHdept">
INSERT INTO PTL.T_HDEPT (HDEPT_CODE,HDEPT_NM,USE_YN,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT)
SELECT
    S.HDEPT_CODE,S.HDEPT_NM,'Y','I','SYSTEM',NOW(),'SYSTEM',NOW()
FROM PTL.T_IF_HDEPT S
LEFT OUTER JOIN PTL.T_HDEPT T ON S.HDEPT_CODE = T.HDEPT_CODE
WHERE T.HDEPT_CODE IS NULL
	</insert>
<!-- 본부 수정 구분 정리 -->
	<update id="updateModiSeHdept">
UPDATE PTL.T_HDEPT SET MODI_SE = CASE MODI_SE WHEN 'D' THEN 'R' ELSE 'C' END WHERE MODI_SE IN ('I','U','D')
	</update>



<!-- 삭제 부서 이력 -->
	<insert id="syncDeleteDeptHist">
INSERT INTO PTL.T_DEPT_HIST (HIST_DT,DEPT_CODE,DEPT_NM,HDEPT_CODE,USE_YN,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT)
SELECT NOW(),DEPT_CODE,DEPT_NM,HDEPT_CODE,USE_YN,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT
FROM T_DEPT
WHERE MODI_SE = 'D'
	</insert>
<!-- 삭제 부서 -->
	<update id="syncDeleteDept">
UPDATE PTL.T_DEPT SET
    MODI_SE = 'D',
    USE_YN = 'N',
    MODI_ID = 'SYSTEM',
    MODI_DT = NOW()
WHERE MODI_SE = 'C'
  AND DEPT_CODE NOT IN (SELECT DEPT_CODE FROM PTL.T_IF_DEPT)
	</update>
<!-- 변경 부서 이력 -->
	<insert id="syncUpdateDeptHist">
INSERT INTO PTL.T_DEPT_HIST (HIST_DT,DEPT_CODE,DEPT_NM,HDEPT_CODE,USE_YN,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT)
SELECT NOW(),DEPT_CODE,DEPT_NM,HDEPT_CODE,USE_YN,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT
FROM PTL.T_DEPT
WHERE MODI_SE = 'U'
	</insert>
<!-- 변경 부서 -->
	<update id="syncUpdateDept">
UPDATE PTL.T_DEPT T SET
    DEPT_NM = S.DEPT_NM,
    HDEPT_CODE = S.HDEPT_CODE,
    MODI_SE = 'U',
    MODI_ID = 'SYSTEM',
    MODI_DT = NOW()
FROM PTL.T_IF_DEPT S
WHERE T.DEPT_CODE = S.DEPT_CODE
  AND (T.DEPT_NM != S.DEPT_NM OR T.HDEPT_CODE != S.HDEPT_CODE)
	</update>
<!-- 신규 부서 이력 -->
	<insert id="syncInsertDeptHist">
INSERT INTO PTL.T_DEPT_HIST (HIST_DT,DEPT_CODE,DEPT_NM,HDEPT_CODE,USE_YN,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT)
SELECT NOW(),DEPT_CODE,DEPT_NM,HDEPT_CODE,USE_YN,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT
FROM PTL.T_DEPT
WHERE MODI_SE = 'I'
	</insert>
<!-- 신규 부서 -->
	<insert id="syncInsertDept">
INSERT INTO PTL.T_DEPT (DEPT_CODE,DEPT_NM,HDEPT_CODE,USE_YN,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT)
SELECT
    S.DEPT_CODE,S.DEPT_NM,S.HDEPT_CODE,'Y','I','SYSTEM',NOW(),'SYSTEM',NOW()
FROM PTL.T_IF_DEPT S
LEFT OUTER JOIN PTL.T_DEPT T ON T.DEPT_CODE = S.DEPT_CODE
WHERE T.DEPT_CODE IS NULL
	</insert>
<!-- 부서 수정 구분 정리 -->
	<update id="updateModiSeDept">
UPDATE PTL.T_DEPT SET MODI_SE = CASE MODI_SE WHEN 'D' THEN 'R' ELSE 'C' END WHERE MODI_SE IN ('I','U','D')
	</update>



<!-- 삭제 직위 이력 -->
	<insert id="syncDeletePstnHist">
INSERT INTO PTL.T_PSTN_HIST (HIST_DT,PSTN_CODE,PSTN_NM,USE_YN,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT)
SELECT NOW(),PSTN_CODE,PSTN_NM,USE_YN,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT
FROM PTL.T_PSTN
WHERE MODI_SE = 'D'
	</insert>
<!-- 삭제 직위 -->
	<update id="syncDeletePstn">
UPDATE PTL.T_PSTN SET
    USE_YN = 'N',
    MODI_SE = 'D',
    MODI_ID = 'SYSTEM',
    MODI_DT = NOW()
WHERE MODI_SE = 'C'
  AND PSTN_CODE NOT IN (SELECT PSTN_CODE FROM PTL.T_IF_PSTN)
	</update>
<!-- 변경 직위 이력 -->
	<insert id="syncUpdatePstnHist">
INSERT INTO PTL.T_PSTN_HIST (HIST_DT,PSTN_CODE,PSTN_NM,USE_YN,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT)
SELECT NOW(),PSTN_CODE,PSTN_NM,USE_YN,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT
FROM PTL.T_PSTN
WHERE MODI_SE = 'U'
	</insert>
<!-- 변경 직위 -->
	<update id="syncUpdatePstn">
UPDATE PTL.T_PSTN T SET
    PSTN_NM = S.PSTN_NM,
    MODI_SE = 'U',
    MODI_ID = 'SYSTEM',
    MODI_DT = NOW()
FROM PTL.T_IF_PSTN S
WHERE T.PSTN_CODE = S.PSTN_CODE
  AND T.PSTN_NM != S.PSTN_NM
	</update>
<!-- 신규 직위 이력 -->
	<insert id="syncInsertPstnHist">
INSERT INTO PTL.T_PSTN_HIST (HIST_DT,PSTN_CODE,PSTN_NM,USE_YN,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT)
SELECT NOW(),PSTN_CODE,PSTN_NM,USE_YN,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT
FROM PTL.T_PSTN
WHERE MODI_SE = 'I'
	</insert>
<!-- 신규 직위 -->
	<insert id="syncInsertPstn">
INSERT INTO PTL.T_PSTN (PSTN_CODE,PSTN_NM,USE_YN,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT)
SELECT
    S.PSTN_CODE,S.PSTN_NM,'Y','I','SYSTEM',NOW(),'SYSTEM',NOW()
FROM PTL.T_IF_PSTN S
LEFT OUTER JOIN PTL.T_PSTN T ON S.PSTN_CODE = T.PSTN_CODE
WHERE T.PSTN_CODE IS NULL
	</insert>
<!-- 직위 수정 구분 정리 -->
	<update id="updateModiSePstn">
UPDATE PTL.T_PSTN SET MODI_SE = CASE MODI_SE WHEN 'D' THEN 'R' ELSE 'C' END WHERE MODI_SE IN ('I','U','D')
	</update>

</mapper>
