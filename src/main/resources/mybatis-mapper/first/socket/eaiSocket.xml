<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shinvest.ap.socket.mapper.EaiSocketMapper">


<!-- 승인 기본 정보 조회 -->
	<select id='selectDefaultData' parameterType='string' resultType='map'>
SELECT CODE_ID, CODE_NM FROM T_CODE WHERE GROUP_ID = #{goldwingAprvType}
	</select>


<!-- 보고서 승인 정보 조회 -->
	<select id='selectReportAprvData' parameterType='string' resultType='map'>
WITH LD AS (
    SELECT APRV_ID
      , (JSONB_ARRAY_ELEMENTS(RQST_INFO -> 'pcptInfo' -> 'list' -> 'userList') ->> 'deptNm') || ' ' || 
        (JSONB_ARRAY_ELEMENTS(RQST_INFO -> 'pcptInfo' -> 'list' -> 'userList') ->> 'refNm') || ' ' || 
        (JSONB_ARRAY_ELEMENTS(RQST_INFO -> 'pcptInfo' -> 'list' -> 'userList') ->> 'pstnNm') AS PCPT_INFO
      , (JSONB_ARRAY_ELEMENTS(RQST_INFO -> 'mgrInfo' -> 'list' -> 'userList') ->> 'deptNm') || ' ' || 
        (JSONB_ARRAY_ELEMENTS(RQST_INFO -> 'mgrInfo' -> 'list' -> 'userList') ->> 'refNm') || ' ' || 
        (JSONB_ARRAY_ELEMENTS(RQST_INFO -> 'mgrInfo' -> 'list' -> 'userList') ->> 'pstnNm') AS MGR_INFO
      , (JSONB_ARRAY_ELEMENTS(RQST_INFO -> 'deptInfo' -> 'list' -> 'userList') ->> 'deptNm') || ' ' || 
        (JSONB_ARRAY_ELEMENTS(RQST_INFO -> 'deptInfo' -> 'list' -> 'userList') ->> 'refNm') || ' ' || 
        (JSONB_ARRAY_ELEMENTS(RQST_INFO -> 'deptInfo' -> 'list' -> 'userList') ->> 'pstnNm') AS PICR_INFO
      , JSONB_ARRAY_ELEMENTS(RQST_INFO -> 'deptInfo' -> 'list' -> 'deptList') ->> 'deptNm' AS DEPT_INFO
    FROM T_APRV_RQST
    WHERE APRV_CL = 'aprvReportOpen' AND APRV_ID = #{aprvId}
), L AS (
    SELECT
        APRV_ID
      , STRING_AGG(PCPT_INFO,', ') AS PCPT_INFO
      , STRING_AGG(MGR_INFO,', ') AS MGR_INFO
      , STRING_AGG(PICR_INFO,', ') AS PICR_INFO
      , STRING_AGG(DEPT_INFO,', ') AS DEPT_INFO
    FROM LD
    GROUP BY APRV_ID
) SELECT
    U.USER_ID, U.USER_NM, DU.DEPT_NM, PU.PSTN_NM, AR.RQST_RESN
  , P.PROJECT_NM, R.REPORT_NM, R.REPORT_URL, C.CODE_NM AS REPORT_TY
  , L.DEPT_INFO, L.PICR_INFO, L.PCPT_INFO, L.MGR_INFO
FROM T_APRV_RQST AR
JOIN T_REPORT R ON AR.REF_ID = R.REPORT_ID AND AR.APRV_CL = 'aprvReportOpen' AND AR.APRV_ID = #{aprvId}
JOIN T_PROJECT P ON R.PROJECT_ID = P.PROJECT_ID
JOIN T_USER U ON AR.RGST_ID = U.USER_ID
JOIN T_DEPT DU ON U.DEPT_CODE = DU.DEPT_CODE
JOIN T_PSTN PU ON U.PSTN_CODE = PU.PSTN_CODE
LEFT OUTER JOIN L ON AR.APRV_ID = L.APRV_ID
LEFT OUTER JOIN T_CODE C ON R.REPORT_TY = C.CODE_ID AND C.GROUP_ID = 'RPT_TY'
	</select>



<!-- 보고서 역할 승인 정보 조회 -->
	<select id='selectReportRoleAprvData' parameterType='string' resultType='map'>
WITH LD1 AS (
    SELECT AR.APRV_ID
      , (JSONB_ARRAY_ELEMENTS(R.DEPT_INFO -> 'list' -> 'userList') ->> 'deptNm') || ' ' || 
        (JSONB_ARRAY_ELEMENTS(R.DEPT_INFO -> 'list' -> 'userList') ->> 'refNm') || ' ' || 
        (JSONB_ARRAY_ELEMENTS(R.DEPT_INFO -> 'list' -> 'userList') ->> 'pstnNm') AS PICR_INFO
      , JSONB_ARRAY_ELEMENTS(R.DEPT_INFO -> 'list' -> 'deptList') ->> 'deptNm' AS DEPT_INFO
    FROM T_APRV_RQST AR
    JOIN T_REPORT R ON AR.REF_ID = R.REPORT_ID AND AR.APRV_CL = 'aprvReportRole' AND AR.APRV_ID = #{aprvId}
), L1 AS (
    SELECT
        APRV_ID
      , STRING_AGG(PICR_INFO,', ') AS PICR_INFO
      , STRING_AGG(DEPT_INFO,', ') AS DEPT_INFO
    FROM LD1
    GROUP BY APRV_ID
), LD2 AS (
    SELECT
        APRV_ID
      , (JSONB_ARRAY_ELEMENTS(RQST_INFO -> 'pcptInfo' -> 'list' -> 'userList') ->> 'deptNm') || ' ' || 
        (JSONB_ARRAY_ELEMENTS(RQST_INFO -> 'pcptInfo' -> 'list' -> 'userList') ->> 'refNm') || ' ' || 
        (JSONB_ARRAY_ELEMENTS(RQST_INFO -> 'pcptInfo' -> 'list' -> 'userList') ->> 'pstnNm') AS PCPT_INFO
      , (JSONB_ARRAY_ELEMENTS(RQST_INFO -> 'mgrInfo' -> 'list' -> 'userList') ->> 'deptNm') || ' ' || 
        (JSONB_ARRAY_ELEMENTS(RQST_INFO -> 'mgrInfo' -> 'list' -> 'userList') ->> 'refNm') || ' ' || 
        (JSONB_ARRAY_ELEMENTS(RQST_INFO -> 'mgrInfo' -> 'list' -> 'userList') ->> 'pstnNm') AS MGR_INFO
    FROM T_APRV_RQST
    WHERE APRV_CL = 'aprvReportRole' AND APRV_ID = #{aprvId}
), L2 AS (
    SELECT
        APRV_ID
      , STRING_AGG(PCPT_INFO,', ') AS PCPT_INFO
      , STRING_AGG(MGR_INFO,', ') AS MGR_INFO
    FROM LD2
    GROUP BY APRV_ID
) SELECT
    U.USER_ID, U.USER_NM, DU.DEPT_NM, PU.PSTN_NM, AR.RQST_RESN
  , P.PROJECT_NM, R.REPORT_NM, R.REPORT_URL, C.CODE_NM AS REPORT_TY
  , L1.DEPT_INFO, L1.PICR_INFO, L2.PCPT_INFO, L2.MGR_INFO
FROM T_APRV_RQST AR
JOIN T_REPORT R ON AR.REF_ID = R.REPORT_ID AND AR.APRV_CL = 'aprvReportRole' AND AR.APRV_ID = #{aprvId}
JOIN T_PROJECT P ON R.PROJECT_ID = P.PROJECT_ID
JOIN T_USER U ON AR.RGST_ID = U.USER_ID
JOIN T_DEPT DU ON U.DEPT_CODE = DU.DEPT_CODE
JOIN T_PSTN PU ON U.PSTN_CODE = PU.PSTN_CODE
LEFT OUTER JOIN L1 ON AR.APRV_ID = L1.APRV_ID
LEFT OUTER JOIN L2 ON AR.APRV_ID = L2.APRV_ID
LEFT OUTER JOIN T_CODE C ON R.REPORT_TY = C.CODE_ID AND C.GROUP_ID = 'RPT_TY'
	</select>



<!-- 프로젝트 승인 정보 조회 -->
	<select id='selectProjectAprvData' parameterType='string' resultType='map'>
WITH LD AS (
    SELECT APRV_ID
      , (JSONB_ARRAY_ELEMENTS(PCPT_INFO -> 'list' -> 'userList') ->> 'deptNm') || ' ' || 
        (JSONB_ARRAY_ELEMENTS(PCPT_INFO -> 'list' -> 'userList') ->> 'refNm') || ' ' || 
        (JSONB_ARRAY_ELEMENTS(PCPT_INFO -> 'list' -> 'userList') ->> 'pstnNm') AS PCPT_INFO
      , (JSONB_ARRAY_ELEMENTS(MGR_INFO -> 'list' -> 'userList') ->> 'deptNm') || ' ' || 
        (JSONB_ARRAY_ELEMENTS(MGR_INFO -> 'list' -> 'userList') ->> 'refNm') || ' ' || 
        (JSONB_ARRAY_ELEMENTS(MGR_INFO -> 'list' -> 'userList') ->> 'pstnNm') AS MGR_INFO
      , JSONB_ARRAY_ELEMENTS(PROJECT_RSRC -> 'apps') ->> 'instanceNm' AS PROJECT_RSRC_APP
      , JSONB_ARRAY_ELEMENTS(PROJECT_RSRC -> 'jobs') ->> 'instanceNm' AS PROJECT_RSRC_JOB
    FROM T_PROJECT_APPLY WHERE APRV_ID = #{aprvId}
), L AS (
    SELECT
        APRV_ID
      , STRING_AGG(PCPT_INFO,', ') AS PCPT_INFO
      , STRING_AGG(MGR_INFO,', ') AS MGR_INFO
      , STRING_AGG(PROJECT_RSRC_APP,', ') AS PROJECT_RSRC_APP
      , STRING_AGG(PROJECT_RSRC_JOB,', ') AS PROJECT_RSRC_JOB
    FROM LD
    GROUP BY APRV_ID
) SELECT
    U.USER_ID, U.USER_NM, DU.DEPT_NM, PU.PSTN_NM, AR.RQST_RESN
  , P.PROJECT_NM, P.PROJECT_DSC, DATE(P.START_DT) || ' ~ ' || DATE(P.END_DT) AS PROJECT_PD
  , L.MGR_INFO, L.PCPT_INFO, L.PROJECT_RSRC_APP, L.PROJECT_RSRC_JOB
FROM T_APRV_RQST AR
JOIN T_PROJECT_APPLY P ON AR.APRV_ID = P.APRV_ID AND AR.APRV_CL = 'aprvProject' AND AR.APRV_ID = #{aprvId}
JOIN T_USER U ON AR.RGST_ID = U.USER_ID
JOIN T_DEPT DU ON U.DEPT_CODE = DU.DEPT_CODE
JOIN T_PSTN PU ON U.PSTN_CODE = PU.PSTN_CODE
LEFT OUTER JOIN L ON AR.APRV_ID = L.APRV_ID
	</select>



<!-- 프로젝트 야간 사용 승인 정보 조회 -->
	<select id='selectProjectNightUseAprvData' parameterType='string' resultType='map'>
WITH LD AS (
    SELECT PROJECT_ID
      , (JSONB_ARRAY_ELEMENTS(MGR_INFO -> 'list' -> 'userList') ->> 'deptNm') || ' ' || 
        (JSONB_ARRAY_ELEMENTS(MGR_INFO -> 'list' -> 'userList') ->> 'refNm') || ' ' || 
        (JSONB_ARRAY_ELEMENTS(MGR_INFO -> 'list' -> 'userList') ->> 'pstnNm') AS MGR_INFO
    FROM T_APRV_RQST AR
    JOIN T_PROJECT P ON AR.REF_ID = P.PROJECT_ID AND AR.APRV_CL = 'aprvProjectNight' AND AR.APRV_ID = #{aprvId}
), L AS (
    SELECT
        PROJECT_ID
      , STRING_AGG(MGR_INFO,', ') AS MGR_INFO
    FROM LD
    GROUP BY PROJECT_ID
) SELECT
    U.USER_ID, U.USER_NM, DU.DEPT_NM, PU.PSTN_NM, AR.RQST_RESN
  , P.PROJECT_NM, DATE(P.START_DT) || ' ~ ' || DATE(P.END_DT) AS PROJECT_PD
  , L.MGR_INFO
  , (RQST_INFO ->> 'nightUseYn') AS NIGHT_USE_YN
  , CASE WHEN NULLIF((RQST_INFO ->> 'nightUseStartDt'),'') IS NULL THEN NULL ELSE (RQST_INFO ->> 'nightUseStartDt')||' ~ '||(RQST_INFO ->> 'nightUseEndDt') END AS NIGHT_USE_PD
FROM T_APRV_RQST AR
JOIN T_PROJECT P ON AR.REF_ID = P.PROJECT_ID AND AR.APRV_CL = 'aprvProjectNight' AND AR.APRV_ID = #{aprvId}
JOIN T_USER U ON AR.RGST_ID = U.USER_ID
JOIN T_DEPT DU ON U.DEPT_CODE = DU.DEPT_CODE
JOIN T_PSTN PU ON U.PSTN_CODE = PU.PSTN_CODE
LEFT OUTER JOIN L ON AR.REF_ID = L.PROJECT_ID
	</select>



<!-- 사용자 권한 변경 승인 정보 조회 -->
	<select id='selectUserAuthAprvData' parameterType='string' resultType='map'>
SELECT
    U.USER_ID, U.USER_NM, DU.DEPT_NM, PU.PSTN_NM, AR.RQST_RESN
  , RQST_INFO -> 'userAuth' ->> 'bfAuthNm' AS USER_BF_AUTH_NM
  , RQST_INFO -> 'userAuth' ->> 'afAuthNm' AS USER_AF_AUTH_NM
  , RQST_INFO -> 'mgrAuth' ->> 'bfAuthNm' AS MGR_BF_AUTH_NM
  , RQST_INFO -> 'mgrAuth' ->> 'afAuthNm' AS MGR_AF_AUTH_NM
FROM T_APRV_RQST AR
JOIN T_USER U ON AR.RGST_ID = U.USER_ID
JOIN T_DEPT DU ON U.DEPT_CODE = DU.DEPT_CODE
JOIN T_PSTN PU ON U.PSTN_CODE = PU.PSTN_CODE
WHERE AR.APRV_CL = 'aprvAuthChange' AND APRV_ID = #{aprvId}
	</select>



<!-- 데이터 권한 승인 정보 조회 -->
	<select id='selectDataAprvData' parameterType='string' resultType='map'>
SELECT
    U.USER_ID, U.USER_NM, DU.DEPT_NM, PU.PSTN_NM, AR.RQST_RESN
FROM T_APRV_RQST AR
JOIN T_USER U ON AR.RGST_ID = U.USER_ID
JOIN T_DEPT DU ON U.DEPT_CODE = DU.DEPT_CODE
JOIN T_PSTN PU ON U.PSTN_CODE = PU.PSTN_CODE
WHERE AR.APRV_CL = 'aprvDataResource' AND APRV_ID = #{aprvId}
	</select>




<!-- 모델 배포 승인 정보 조회 -->
	<select id='selectModelDeployAprvData' parameterType='string' resultType='map'>
SELECT
    U.USER_ID, U.USER_NM, DU.DEPT_NM, PU.PSTN_NM, AR.RQST_RESN
FROM T_APRV_RQST AR
JOIN T_USER U ON AR.RGST_ID = U.USER_ID
JOIN T_DEPT DU ON U.DEPT_CODE = DU.DEPT_CODE
JOIN T_PSTN PU ON U.PSTN_CODE = PU.PSTN_CODE
WHERE AR.APRV_CL = 'aprvModelDeploy' AND APRV_ID = #{aprvId}
	</select>





<!-- 승인 상세 정보 Insert(upsert) -->
	<insert id='insertAprvRqstDtl' parameterType='map'>
INSERT INTO PTL.T_APRV_RQST_DTL (APRV_ID,APRV_SEQ,APRV_SE,APRV_STAT,APRV_DT,APRVR_ID,RJCT_RESN,USE_YN,RGST_ID,RGST_DT,MODI_ID,MODI_DT,APRVR_NM,DEPT_CODE,DEPT_NM,PSTN_CODE,PSTN_NM)
SELECT #{aprvId},#{aprvSeq}::INTEGER,#{aprvSe},#{aprvStat},#{aprvDt}::TIMESTAMP,U.USER_ID,NULL,'Y',#{userId},NOW(),#{userId},NOW(),U.USER_NM,U.DEPT_CODE,D.DEPT_NM,U.PSTN_CODE,P.PSTN_NM
FROM PTL.T_USER U
LEFT OUTER JOIN T_DEPT D ON U.DEPT_CODE = D.DEPT_CODE
LEFT OUTER JOIN T_PSTN P ON U.PSTN_CODE = P.PSTN_CODE
WHERE USER_ID = #{aprvrId}
ON CONFLICT (APRV_ID, APRV_SEQ) DO UPDATE SET
    APRV_SE = EXCLUDED.APRV_SE
  , APRV_STAT = EXCLUDED.APRV_STAT
  , APRV_DT = EXCLUDED.APRV_DT
  , APRVR_ID = EXCLUDED.APRVR_ID
  , RJCT_RESN = EXCLUDED.RJCT_RESN
  , USE_YN = EXCLUDED.USE_YN
  , MODI_ID = EXCLUDED.MODI_ID
  , MODI_DT = EXCLUDED.MODI_DT
  , APRVR_NM = EXCLUDED.APRVR_NM
  , DEPT_CODE = EXCLUDED.DEPT_CODE
  , DEPT_NM = EXCLUDED.DEPT_NM
  , PSTN_CODE = EXCLUDED.PSTN_CODE
  , PSTN_NM = EXCLUDED.PSTN_NM
	</insert>

<!-- 승인 정보 Update -->
	<update id='updateAprvRqst' parameterType='map'>
UPDATE T_APRV_RQST SET
    APRV_STAT = #{aprvStat}
  , APRV_DT = #{aprvDt}::TIMESTAMP
  , APRVR_ID = #{aprvrId}
  , RJCT_RESN = #{rjctResn}
  , DOC_ID = #{docId}
  , USE_YN = 'Y'
  , MODI_ID = #{userId}
  , MODI_DT = NOW()
WHERE APRV_ID = #{aprvId}
	</update>

<!-- 승인 조회 -->
	<select id='selectAprvRqst' parameterType='string' resultType='aprvModel'>
SELECT
    APRV_ID,REF_ID,REF_VER,APRV_CL,APRV_STAT,APRV_DT,APRVR_ID,RQST_INFO,RQST_RESN,RJCT_RESN,DOC_ID,USE_YN,RGST_ID,RGST_DT,MODI_ID,MODI_DT,ROLE_SE,REF_TY
FROM PTL.T_APRV_RQST
WHERE APRV_ID = #{aprvId}
	</select>





<!-- 보고서 정보 업데이트 -->
	<update id='updateReport' parameterType='string'>
UPDATE PTL.T_REPORT R SET
    VER = AR.REF_VER
  , REPORT_TY = AR.RQST_INFO ->> 'reportTy'
  , REPORT_DSC = AR.RQST_INFO ->> 'reportDsc'
  , PCPT_INFO = AR.RQST_INFO -> 'pcptInfo'
  , MGR_INFO = AR.RQST_INFO -> 'mgrInfo'
  , DEPT_INFO = AR.RQST_INFO -> 'deptInfo'
  , DEPT_CODE = AR.RQST_INFO ->> 'deptCode'
  , MAIN_PICR_ID = AR.RQST_INFO ->> 'mainPicrId'
  , SUB_PICR_ID = AR.RQST_INFO ->> 'subPicrId'
  , ACTIVE_YN = 'Y'
  , MODI_ID = AR.RGST_ID
  , MODI_DT = NOW()
FROM PTL.T_APRV_RQST AR
WHERE R.REPORT_ID = AR.REF_ID AND AR.APRV_ID = #{aprvId}
	</update>
<!-- 보고서 이력 등록 -->
	<insert id='insertReportHist' parameterType='string'>
INSERT INTO PTL.T_REPORT_HIST (HIST_DT,REPORT_ID,VER,PROJECT_ID,REPORT_NM,REPORT_CL,REPORT_TY,REPORT_SE,WRK_CAT,REPORT_DSC,REPORT_STAT,REPORT_URL,REPORT_ATTR,PREVIEW_URL,FILE_ID,DEPT_CODE,PCPT_INFO,MGR_INFO,SANCTN_INFO,RQST_RESN,EXECUT_CYCLE,ACTIVE_YN,ATMC_APRV_YN,ORD_SEQ,USE_YN,RGST_ID,RGST_DT,MODI_ID,MODI_DT,ORGN_REPORT_ID,ORGN_REPORT_VER,DEPT_INFO,TABLEAU_WORKBOOK_ID,DEPT_MNG_YN,VIEW_CNT,MAIN_PICR_ID,SUB_PICR_ID)
SELECT NOW(),REPORT_ID,VER,PROJECT_ID,REPORT_NM,REPORT_CL,REPORT_TY,REPORT_SE,WRK_CAT,REPORT_DSC,REPORT_STAT,REPORT_URL,REPORT_ATTR,PREVIEW_URL,FILE_ID,DEPT_CODE,PCPT_INFO,MGR_INFO,SANCTN_INFO,RQST_RESN,EXECUT_CYCLE,ACTIVE_YN,ATMC_APRV_YN,ORD_SEQ,USE_YN,RGST_ID,RGST_DT,MODI_ID,MODI_DT,ORGN_REPORT_ID,ORGN_REPORT_VER,DEPT_INFO,TABLEAU_WORKBOOK_ID,DEPT_MNG_YN,VIEW_CNT,MAIN_PICR_ID,SUB_PICR_ID
FROM PTL.T_REPORT
WHERE REPORT_ID = #{reportId}
	</insert>
<!-- 보고서 사용자 등록 -->
	<insert id='insertReportUser' parameterType='string'>
INSERT INTO PTL.T_REPORT_USER (REPORT_ID,VER,ROLE_SE,REF_TY,REF_ID,USE_YN,RGST_ID,RGST_DT,MODI_ID,MODI_DT)
SELECT REF_ID, REF_VER,'1','1',JSONB_ARRAY_ELEMENTS(RQST_INFO->'mgrInfo'->'list'->'userList')->>'refId','Y',RGST_ID,NOW(),RGST_ID,NOW()
FROM T_APRV_RQST
WHERE APRV_ID = #{aprvId}
UNION
SELECT REF_ID, REF_VER,'1','2',JSONB_ARRAY_ELEMENTS(RQST_INFO->'mgrInfo'->'list'->'deptList')->>'refId','Y',RGST_ID,NOW(),RGST_ID,NOW()
FROM T_APRV_RQST
WHERE APRV_ID = #{aprvId}
UNION 
SELECT REF_ID, REF_VER,'1','3',JSONB_ARRAY_ELEMENTS(RQST_INFO->'mgrInfo'->'list'->'groupList')->>'refId','Y',RGST_ID,NOW(),RGST_ID,NOW()
FROM T_APRV_RQST
WHERE APRV_ID = #{aprvId}
UNION
SELECT REF_ID, REF_VER,'2','1',JSONB_ARRAY_ELEMENTS(RQST_INFO->'pcptInfo'->'list'->'userList')->>'refId','Y',RGST_ID,NOW(),RGST_ID,NOW()
FROM T_APRV_RQST
WHERE APRV_ID = #{aprvId}
UNION
SELECT REF_ID, REF_VER,'2','2',JSONB_ARRAY_ELEMENTS(RQST_INFO->'pcptInfo'->'list'->'deptList')->>'refId','Y',RGST_ID,NOW(),RGST_ID,NOW()
FROM T_APRV_RQST
WHERE APRV_ID = #{aprvId}
UNION 
SELECT REF_ID, REF_VER,'2','3',JSONB_ARRAY_ELEMENTS(RQST_INFO->'pcptInfo'->'list'->'groupList')->>'refId','Y',RGST_ID,NOW(),RGST_ID,NOW()
FROM T_APRV_RQST
WHERE APRV_ID = #{aprvId}
	</insert>
<!-- 보고서 사용자 이력 등록 -->
	<insert id='insertReportUserHist' parameterType='aprvModel'>
INSERT INTO PTL.T_REPORT_USER_HIST (HIST_DT,REPORT_ID,VER,ROLE_SE,REF_TY,REF_ID,USE_YN,RGST_ID,RGST_DT,MODI_ID,MODI_DT)
SELECT NOW(),REPORT_ID,VER,ROLE_SE,REF_TY,REF_ID,USE_YN,RGST_ID,RGST_DT,MODI_ID,MODI_DT
FROM PTL.T_REPORT_USER
WHERE REPORT_ID = #{refId} AND VER = #{refVer}
	</insert>
<!-- 보고서에 역할 정보 업데이트 -->
	<update id='updateReportUserInfo' parameterType='aprvModel'>
UPDATE T_REPORT R SET
    MGR_INFO = INFO.MGR_INFO
  , PCPT_INFO = INFO.PCPT_INFO
  , MODI_ID = #{rgstId}
  , MODI_DT = NOW()
FROM (
WITH IDS AS (
    SELECT
        REPORT_ID, ROLE_SE, JSONB_AGG(REF_ID) AS IDS
    FROM T_REPORT_USER
    WHERE REPORT_ID = #{refId} AND VER = #{refVer}
    GROUP BY REPORT_ID, ROLE_SE
), USER_LIST AS (
    SELECT
        R.REPORT_ID
      , R.ROLE_SE
      , JSON_AGG(
            JSONB_BUILD_OBJECT(
                'refTy',R.REF_TY
              , 'refId',R.REF_ID
              , 'refNm',U.USER_NM
              , 'pstnCode',U.PSTN_CODE
              , 'deptCode',U.DEPT_CODE
              , 'pstnNm',P.PSTN_NM
              , 'deptNm',D.DEPT_NM
              , 'tableauUserId',COALESCE(T.TABLEAU_USER_ID,'')
            )
        ) AS USER_LIST
    FROM T_REPORT_USER R
    LEFT OUTER JOIN T_TABLEAU_USER T ON R.REF_ID = T.USER_ID
    LEFT OUTER JOIN T_USER U ON R.REF_ID = U.USER_ID
    LEFT OUTER JOIN T_PSTN P ON U.PSTN_CODE = P.PSTN_CODE 
    LEFT OUTER JOIN T_DEPT D ON U.DEPT_CODE = D.DEPT_CODE 
    WHERE R.REF_TY = '1' AND R.REPORT_ID = #{refId} AND R.VER = #{refVer}
    GROUP BY R.REPORT_ID, R.ROLE_SE
), DEPT_LIST AS (
    SELECT
        R.REPORT_ID
      , R.ROLE_SE
      , JSON_AGG(
            JSONB_BUILD_OBJECT(
                'refTy',R.REF_TY
              , 'refId',R.REF_ID
              , 'refNm',D.DEPT_NM
              , 'tableauUserId',''
            )
        ) AS DEPT_LIST
    FROM T_REPORT_USER R
    LEFT OUTER JOIN T_DEPT_CL D ON R.REF_ID = D.DEPT_CODE
    WHERE R.REF_TY = '2' AND R.REPORT_ID = #{refId} AND R.VER = #{refVer}
    GROUP BY R.REPORT_ID, R.ROLE_SE
), GROUP_LIST AS (
    SELECT
        R.REPORT_ID
      , R.ROLE_SE
      , JSON_AGG(
            JSONB_BUILD_OBJECT(
                'refTy',R.REF_TY
              , 'refId',R.REF_ID
              , 'refNm',G.GROUP_NM
              , 'tableauUserId',''
            )
        ) AS GROUP_LIST
    FROM T_REPORT_USER R
    LEFT OUTER JOIN T_ROLE_GROUP G ON R.REF_ID = G.GROUP_ID
    WHERE R.REF_TY = '3' AND R.REPORT_ID = #{refId} AND R.VER = #{refVer}
    GROUP BY R.REPORT_ID, R.ROLE_SE
), SUM_OBJ AS (
    SELECT
        I.REPORT_ID
      , I.ROLE_SE
      , JSONB_BUILD_OBJECT(
            'ids',I.IDS
          , 'list',JSONB_BUILD_OBJECT(
              'userList',COALESCE(U.USER_LIST,'[]')
            , 'deptList',COALESCE(D.DEPT_LIST,'[]')
            , 'groupList',COALESCE(G.GROUP_LIST,'[]')
            )
        ) AS INFO
    FROM IDS I
    LEFT OUTER JOIN USER_LIST U ON I.REPORT_ID = U.REPORT_ID AND I.ROLE_SE = U.ROLE_SE
    LEFT OUTER JOIN DEPT_LIST D ON I.REPORT_ID = D.REPORT_ID AND I.ROLE_SE = D.ROLE_SE
    LEFT OUTER JOIN GROUP_LIST G ON I.REPORT_ID = G.REPORT_ID AND I.ROLE_SE = G.ROLE_SE
), BASE AS (
    SELECT REPORT_ID 
    FROM T_REPORT_USER
    WHERE REPORT_ID = #{refId} AND VER = #{refVer}
    GROUP BY REPORT_ID
), MGR_INFO AS (
    SELECT REPORT_ID, INFO AS MGR_INFO FROM SUM_OBJ WHERE ROLE_SE = '1'
), PCPT_INFO AS (
    SELECT REPORT_ID, INFO AS PCPT_INFO FROM SUM_OBJ WHERE ROLE_SE = '2'
) SELECT
    B.REPORT_ID
  , COALESCE(M.MGR_INFO,'{"ids":[],"list":{"userList":[],"deptList":[],"groupList":[]}}') AS MGR_INFO
  , COALESCE(P.PCPT_INFO,'{"ids":[],"list":{"userList":[],"deptList":[],"groupList":[]}}') AS PCPT_INFO
FROM BASE B
LEFT OUTER JOIN MGR_INFO M ON B.REPORT_ID = M.REPORT_ID
LEFT OUTER JOIN PCPT_INFO P ON B.REPORT_ID = P.REPORT_ID
) INFO
WHERE R.REPORT_ID = INFO.REPORT_ID
	</update>






<!-- 보고서 역할 사용자 등록 또는 변경 -->
	<insert id='insertReportRoleUser' parameterType='string'>
INSERT INTO PTL.T_REPORT_USER (REPORT_ID,VER,ROLE_SE,REF_TY,REF_ID,USE_YN,RGST_ID,RGST_DT,MODI_ID,MODI_DT)
SELECT REF_ID, REF_VER,'1','1',JSONB_ARRAY_ELEMENTS(RQST_INFO->'mgrInfo'->'list'->'userList')->>'refId','Y',RGST_ID,NOW(),RGST_ID,NOW()
FROM T_APRV_RQST
WHERE APRV_ID = #{aprvId}
UNION
SELECT REF_ID, REF_VER,'1','2',JSONB_ARRAY_ELEMENTS(RQST_INFO->'mgrInfo'->'list'->'deptList')->>'refId','Y',RGST_ID,NOW(),RGST_ID,NOW()
FROM T_APRV_RQST
WHERE APRV_ID = #{aprvId}
UNION 
SELECT REF_ID, REF_VER,'1','3',JSONB_ARRAY_ELEMENTS(RQST_INFO->'mgrInfo'->'list'->'groupList')->>'refId','Y',RGST_ID,NOW(),RGST_ID,NOW()
FROM T_APRV_RQST
WHERE APRV_ID = #{aprvId}
UNION
SELECT REF_ID, REF_VER,'2','1',JSONB_ARRAY_ELEMENTS(RQST_INFO->'pcptInfo'->'list'->'userList')->>'refId','Y',RGST_ID,NOW(),RGST_ID,NOW()
FROM T_APRV_RQST
WHERE APRV_ID = #{aprvId}
UNION
SELECT REF_ID, REF_VER,'2','2',JSONB_ARRAY_ELEMENTS(RQST_INFO->'pcptInfo'->'list'->'deptList')->>'refId','Y',RGST_ID,NOW(),RGST_ID,NOW()
FROM T_APRV_RQST
WHERE APRV_ID = #{aprvId}
UNION 
SELECT REF_ID, REF_VER,'2','3',JSONB_ARRAY_ELEMENTS(RQST_INFO->'pcptInfo'->'list'->'groupList')->>'refId','Y',RGST_ID,NOW(),RGST_ID,NOW()
FROM T_APRV_RQST
WHERE APRV_ID = #{aprvId}
ON CONFLICT (REPORT_ID,VER,ROLE_SE,REF_TY,REF_ID) DO UPDATE SET
    USE_YN = EXCLUDED.USE_YN
  , MODI_ID = EXCLUDED.MODI_ID
  , MODI_DT = EXCLUDED.MODI_DT
	</insert>
<!-- 보고서 역할 사용자 이력 등록 -->
	<insert id='insertReportRoleUserHist' parameterType='aprvModel'>
INSERT INTO PTL.T_REPORT_USER_HIST (HIST_DT,REPORT_ID,VER,ROLE_SE,REF_TY,REF_ID,USE_YN,RGST_ID,RGST_DT,MODI_ID,MODI_DT)
WITH DT AS (
    SELECT
        DENSE_RANK() OVER(ORDER BY MODI_DT DESC) AS DRANK
      , REPORT_ID,VER,ROLE_SE,REF_TY,REF_ID,USE_YN,RGST_ID,RGST_DT,MODI_ID,MODI_DT
    FROM T_REPORT_USER WHERE REPORT_ID = #{refId} AND VER = #{refVer} AND MODI_ID = #{rgstId}
) SELECT
    NOW(),REPORT_ID,VER,ROLE_SE,REF_TY,REF_ID,USE_YN,RGST_ID,RGST_DT,MODI_ID,MODI_DT
FROM DT
WHERE DRANK = 1
	</insert>





<!-- 프로젝트 승인 정보 등록 또는 업데이트 -->
	<update id='udateProjectApply' parameterType='aprvModel'>
UPDATE PTL.T_PROJECT_APPLY SET
    USE_YN = 'Y'
  , ACTIVE_YN = 'Y'
  , PROJECT_STAT = #{aprvStat}
  , APRV_STAT = #{aprvStat}
  , MODI_ID = #{rgstId}
  , MODI_DT = NOW()
WHERE APRV_ID = #{aprvId}
	</update>
<!-- 프로젝트 정보 등록 또는 업데이트 -->
	<insert id='insertProject' parameterType='aprvModel'>
INSERT INTO PTL.T_PROJECT (PROJECT_ID,VER,PROJECT_NM,PROJECT_CL,PROJECT_TY,PROJECT_SE,DEPT_CODE,PCPT_INFO,MGR_INFO,START_DT,END_DT,PROJECT_DSC,PROJECT_STAT,ORD_SEQ,USE_YN,RGST_ID,RGST_DT,MODI_ID,MODI_DT,PROJECT_DATA,DEPT_INFO,TABLEAU_PROJECT_ID,PROJECT_RSRC,ACTIVE_YN,LAST_VER_YN,APRV_STAT,MAIN_PICR_ID,SUB_PICR_ID)
SELECT PROJECT_ID,VER,PROJECT_NM,PROJECT_CL,PROJECT_TY,PROJECT_SE,DEPT_CODE,PCPT_INFO,MGR_INFO,START_DT,END_DT,PROJECT_DSC,PROJECT_STAT,ORD_SEQ,USE_YN,RGST_ID,RGST_DT,MODI_ID,MODI_DT,PROJECT_DATA,DEPT_INFO,TABLEAU_PROJECT_ID,PROJECT_RSRC,ACTIVE_YN,LAST_VER_YN,APRV_STAT,MAIN_PICR_ID,SUB_PICR_ID
FROM PTL.T_PROJECT_APPLY
WHERE APRV_ID = #{aprvId}
ON CONFLICT (PROJECT_ID) DO UPDATE SET
    VER = EXCLUDED.VER
  , PROJECT_NM = EXCLUDED.PROJECT_NM
  , PROJECT_CL = EXCLUDED.PROJECT_CL
  , PROJECT_TY = EXCLUDED.PROJECT_TY
  , PROJECT_SE = EXCLUDED.PROJECT_SE
  , DEPT_CODE = EXCLUDED.DEPT_CODE
  , PCPT_INFO = EXCLUDED.PCPT_INFO
  , MGR_INFO = EXCLUDED.MGR_INFO
  , START_DT = EXCLUDED.START_DT
  , END_DT = EXCLUDED.END_DT
  , PROJECT_DSC = EXCLUDED.PROJECT_DSC
  , PROJECT_STAT = EXCLUDED.PROJECT_STAT
  , ORD_SEQ = EXCLUDED.ORD_SEQ
  , USE_YN = EXCLUDED.USE_YN
  , RGST_ID = EXCLUDED.RGST_ID
  , RGST_DT = EXCLUDED.RGST_DT
  , MODI_ID = EXCLUDED.MODI_ID
  , MODI_DT = EXCLUDED.MODI_DT
  , PROJECT_DATA = EXCLUDED.PROJECT_DATA
  , DEPT_INFO = EXCLUDED.DEPT_INFO
  , TABLEAU_PROJECT_ID = EXCLUDED.TABLEAU_PROJECT_ID
  , PROJECT_RSRC = EXCLUDED.PROJECT_RSRC
  , ACTIVE_YN = EXCLUDED.ACTIVE_YN
  , LAST_VER_YN = EXCLUDED.LAST_VER_YN
  , APRV_STAT = EXCLUDED.APRV_STAT
  , MAIN_PICR_ID = EXCLUDED.MAIN_PICR_ID
  , SUB_PICR_ID = EXCLUDED.SUB_PICR_ID
	</insert>
<!-- 프로젝트 정보 이력 등록 -->
	<insert id='insertProjectHist' parameterType='aprvModel'>
INSERT INTO PTL.T_PROJECT_HIST (HIST_DT,PROJECT_ID,VER,PROJECT_NM,PROJECT_CL,PROJECT_TY,PROJECT_SE,DEPT_CODE,PCPT_INFO,MGR_INFO,START_DT,END_DT,PROJECT_DSC,PROJECT_STAT,ORD_SEQ,USE_YN,RGST_ID,RGST_DT,MODI_ID,MODI_DT,PROJECT_DATA,DEPT_INFO,TABLEAU_PROJECT_ID,PROJECT_RSRC,ACTIVE_YN,LAST_VER_YN,APRV_STAT,MAIN_PICR_ID,SUB_PICR_ID)
SELECT NOW(),PROJECT_ID,VER,PROJECT_NM,PROJECT_CL,PROJECT_TY,PROJECT_SE,DEPT_CODE,PCPT_INFO,MGR_INFO,START_DT,END_DT,PROJECT_DSC,PROJECT_STAT,ORD_SEQ,USE_YN,RGST_ID,RGST_DT,MODI_ID,MODI_DT,PROJECT_DATA,DEPT_INFO,TABLEAU_PROJECT_ID,PROJECT_RSRC,ACTIVE_YN,LAST_VER_YN,APRV_STAT,MAIN_PICR_ID,SUB_PICR_ID
FROM PTL.T_PROJECT
WHERE PROJECT_ID = #{refId}
	</insert>
<!-- 프로젝트 사용자 정보 등록 -->
	<insert id='insertProjectUser' parameterType='aprvModel'>
INSERT INTO PTL.T_PROJECT_USER (PROJECT_ID,VER,ROLE_SE,REF_TY,REF_ID,NIGHT_USE_YN,NIGHT_USE_START_DT,NIGHT_USE_END_DT,USE_YN,RGST_ID,RGST_DT,MODI_ID,MODI_DT,NIGHT_USE_APRV_STAT)
SELECT PROJECT_ID, VER,'1','1',JSONB_ARRAY_ELEMENTS(MGR_INFO->'list'->'userList')->>'refId','N',NULL::TIMESTAMP,NULL::TIMESTAMP,'Y',RGST_ID,NOW(),RGST_ID,NOW(),'N'
FROM T_PROJECT_APPLY
WHERE APRV_ID = #{aprvId}
UNION
SELECT PROJECT_ID, VER,'1','2',JSONB_ARRAY_ELEMENTS(MGR_INFO->'list'->'deptList')->>'refId','N',NULL::TIMESTAMP,NULL::TIMESTAMP,'Y',RGST_ID,NOW(),RGST_ID,NOW(),'N'
FROM T_PROJECT_APPLY
WHERE APRV_ID = #{aprvId}
UNION 
SELECT PROJECT_ID, VER,'1','3',JSONB_ARRAY_ELEMENTS(MGR_INFO->'list'->'groupList')->>'refId','N',NULL::TIMESTAMP,NULL::TIMESTAMP,'Y',RGST_ID,NOW(),RGST_ID,NOW(),'N'
FROM T_PROJECT_APPLY
WHERE APRV_ID = #{aprvId}
UNION
SELECT PROJECT_ID, VER,'2','1',JSONB_ARRAY_ELEMENTS(PCPT_INFO->'list'->'userList')->>'refId','N',NULL::TIMESTAMP,NULL::TIMESTAMP,'Y',RGST_ID,NOW(),RGST_ID,NOW(),'N'
FROM T_PROJECT_APPLY
WHERE APRV_ID = #{aprvId}
UNION
SELECT PROJECT_ID, VER,'2','2',JSONB_ARRAY_ELEMENTS(PCPT_INFO->'list'->'deptList')->>'refId','N',NULL::TIMESTAMP,NULL::TIMESTAMP,'Y',RGST_ID,NOW(),RGST_ID,NOW(),'N'
FROM T_PROJECT_APPLY
WHERE APRV_ID = #{aprvId}
UNION 
SELECT PROJECT_ID, VER,'2','3',JSONB_ARRAY_ELEMENTS(PCPT_INFO->'list'->'groupList')->>'refId','N',NULL::TIMESTAMP,NULL::TIMESTAMP,'Y',RGST_ID,NOW(),RGST_ID,NOW(),'N'
FROM T_PROJECT_APPLY
WHERE APRV_ID = #{aprvId}
	</insert>
<!-- 프로젝트 사용자 정보 이력 등록 -->
	<insert id='insertProjectUserHist' parameterType='aprvModel'>
INSERT INTO PTL.T_PROJECT_USER_HIST (HIST_DT,PROJECT_ID,VER,ROLE_SE,REF_TY,REF_ID,NIGHT_USE_YN,NIGHT_USE_START_DT,NIGHT_USE_END_DT,USE_YN,RGST_ID,RGST_DT,MODI_ID,MODI_DT,NIGHT_USE_APRV_STAT)
SELECT NOW(),PROJECT_ID,VER,ROLE_SE,REF_TY,REF_ID,NIGHT_USE_YN,NIGHT_USE_START_DT,NIGHT_USE_END_DT,USE_YN,RGST_ID,RGST_DT,MODI_ID,MODI_DT,NIGHT_USE_APRV_STAT
FROM PTL.T_PROJECT_USER
WHERE PROJECT_ID = #{refId} AND VER = #{refVer}
	</insert>
<!-- 프로젝트 조회 -->
	<select id='selectProject' parameterType='string' resultType='projectModel'>
SELECT
    PROJECT_ID,VER,PROJECT_NM,PROJECT_CL,PROJECT_TY,PROJECT_SE,DEPT_CODE,PCPT_INFO,MGR_INFO,START_DT,END_DT,PROJECT_DSC,PROJECT_STAT,ORD_SEQ,USE_YN,RGST_ID,RGST_DT,MODI_ID,MODI_DT,PROJECT_DATA,DEPT_INFO,TABLEAU_PROJECT_ID,PROJECT_RSRC,ACTIVE_YN,LAST_VER_YN,APRV_STAT,MAIN_PICR_ID,SUB_PICR_ID
FROM PTL.T_PROJECT
WHERE PROJECT_ID = #{projectId}
	</select>





<!-- 프로젝트 야간 사용 업데이트 -->
	<update id='updateProjectUserNightUse' parameterType='map'>
UPDATE PTL.T_PROJECT_USER SET
    NIGHT_USE_YN = #{nightUseYn}
  , NIGHT_USE_START_DT = NULLIF(#{nightUseStartDt},'')::TIMESTAMP
  , NIGHT_USE_END_DT = NULLIF(#{nightUseEndDt},'')::TIMESTAMP
  , NIGHT_USE_APRV_STAT = #{nightUseAprvStat}
  , MODI_ID = #{userId}
  , MODI_DT = NOW()
WHERE PROJECT_ID = #{projectId} AND VER = #{ver} AND ROLE_SE = #{roleSe} AND REF_TY = #{refTy} AND REF_ID = #{userId}
	</update>
<!-- 프로젝트 야간 사용 이력 등록 -->
	<insert id='insertProjectUserNightUseHist' parameterType='map'>
INSERT INTO PTL.T_PROJECT_USER_HIST (HIST_DT,PROJECT_ID,VER,ROLE_SE,REF_TY,REF_ID,NIGHT_USE_YN,NIGHT_USE_START_DT,NIGHT_USE_END_DT,USE_YN,RGST_ID,RGST_DT,MODI_ID,MODI_DT,NIGHT_USE_APRV_STAT)
SELECT NOW(),PROJECT_ID,VER,ROLE_SE,REF_TY,REF_ID,NIGHT_USE_YN,NIGHT_USE_START_DT,NIGHT_USE_END_DT,USE_YN,RGST_ID,RGST_DT,MODI_ID,MODI_DT,NIGHT_USE_APRV_STAT
FROM PTL.T_PROJECT_USER
WHERE PROJECT_ID = #{projectId} AND VER = #{ver} AND ROLE_SE = #{roleSe} AND REF_TY = #{refTy} AND REF_ID = #{userId}
	</insert>





<!-- 사용자 시스템 권한 제거 -->
	<update id='deleteUserSysAuth' parameterType='string'>
UPDATE PTL.T_USER_AUTH SET
    USE_YN = 'N'
  , MODI_ID = #{userId}
  , MODI_DT = NOW()
WHERE USER_ID = #{userId}
	</update>
<!-- 사용자 시스템 권한 변경 -->
	<update id='updateUserSysAuth' parameterType='map'>
UPDATE PTL.T_USER_AUTH SET
    AUTH_ID = #{afAuthId}
  , USE_YN = 'Y'
  , MODI_ID = #{userId}
  , MODI_DT = NOW()
WHERE USER_ID = #{userId}
	</update>
<!-- 관리자 시스템 권한 제거 -->
	<update id='deleteMgrSysAuth' parameterType='string'>
UPDATE PTL.T_MGR_AUTH SET
    USE_YN = 'N'
  , MODI_ID = #{userId}
  , MODI_DT = NOW()
WHERE USER_ID = #{userId}
	</update>
<!-- 관리자 시스템 권한 등록 또는 변경 -->
	<update id='updateMgrSysAuth' parameterType='map'>
INSERT INTO PTL.T_MGR_AUTH (USER_ID,AUTH_ID,USE_YN,RGST_ID,RGST_DT,MODI_ID,MODI_DT) VALUES (#{userId},#{afAuthId},'Y',#{userId},NOW(),#{userId},NOW())
ON CONFLICT (USER_ID) DO UPDATE SET
    AUTH_ID = EXCLUDED.AUTH_ID
  , USE_YN = EXCLUDED.USE_YN
  , MODI_ID = EXCLUDED.MODI_ID
  , MODI_DT = EXCLUDED.MODI_DT
	</update>
<!-- 사용자 이력 기록 -->
	<update id='insertUserHist' parameterType='string'>
INSERT INTO PTL.T_USER_HIST(HIST_DT,USER_ID,USER_NM,PSTN_CODE,PSTN_NM,DEPT_CODE,DEPT_NM,ADOF_DEPT_CODE,ADOF_DEPT_NM,HDEPT_CODE,HDEPT_NM,COMPANY_CODE,COMPANY_NM,DUTY_SE,USE_YN,LAST_LOG_DT,START_DT,END_DT,MODI_SE,RGST_ID,RGST_DT,MODI_ID,MODI_DT,FILE_URL,MGR_AUTH_ID,MGR_AUTH_CL,MGR_AUTH_NM,USER_AUTH_ID,USER_AUTH_CL,USER_AUTH_NM,MGR_SYS_ENV,USER_SYS_ENV,BF_DEPT_CODE,DEPT_UPDT_DT,USER_SYS_HOME,MGR_AUTH_USE_YN,USER_AUTH_USE_YN)
SELECT NOW(),T.USER_ID,T.USER_NM,T.PSTN_CODE,P.PSTN_NM,T.DEPT_CODE,D.DEPT_NM,T.ADOF_DEPT_CODE,AD.DEPT_NM,T.HDEPT_CODE,H.HDEPT_NM,T.COMPANY_CODE,NULL,T.DUTY_SE,T.USE_YN,T.LAST_LOG_DT,T.START_DT,T.END_DT,T.MODI_SE,T.RGST_ID,T.RGST_DT,T.MODI_ID,T.MODI_DT,T.FILE_URL,MA.AUTH_ID,MSA.AUTH_CL,MSA.AUTH_NM,UA.AUTH_ID,USA.AUTH_CL,USA.AUTH_NM,T.MGR_SYS_ENV,T.USER_SYS_ENV,T.BF_DEPT_CODE,T.DEPT_UPDT_DT,T.USER_SYS_HOME,MA.USE_YN,UA.USE_YN
FROM PTL.T_USER T
LEFT OUTER JOIN PTL.T_HDEPT H ON T.HDEPT_CODE = H.HDEPT_CODE
LEFT OUTER JOIN PTL.T_DEPT D ON T.DEPT_CODE = D.DEPT_CODE
LEFT OUTER JOIN PTL.T_DEPT AD ON T.ADOF_DEPT_CODE = AD.DEPT_CODE
LEFT OUTER JOIN PTL.T_PSTN P ON T.PSTN_CODE = P.PSTN_CODE
LEFT OUTER JOIN PTL.T_MGR_AUTH MA ON T.USER_ID = MA.USER_ID
LEFT OUTER JOIN PTL.T_MGR_SYS_AUTH MSA ON MA.AUTH_ID = MSA.AUTH_ID
LEFT OUTER JOIN PTL.T_USER_AUTH UA ON T.USER_ID = UA.USER_ID
LEFT OUTER JOIN PTL.T_USER_SYS_AUTH USA ON UA.AUTH_ID = USA.AUTH_ID
WHERE T.USER_ID = #{userId}
	</update>



</mapper>
